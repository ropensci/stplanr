% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnet_join.R
\name{rnet_join}
\alias{rnet_join}
\title{Spatial join function that is designed to add columns to a 'target' route network
from a 'source' route network that contains the base geometry, e.g. from OSM}
\usage{
rnet_join(
  rnet_x,
  rnet_y,
  dist = 5,
  length_y = TRUE,
  key_column = 1,
  subset_x = TRUE,
  dist_subset = 5,
  split_y = TRUE,
  ...
)
}
\arguments{
\item{rnet_x}{Target route network, the output will have the same geometries
as features in this object.}

\item{rnet_y}{Source route network. Columns from this route network object will
be copied across to the new network.}

\item{dist}{The buffer width around rnet_y in meters. 1 m by default.}

\item{length_y}{Add a new column called \code{length_y}? Useful when joining based on
length of segments (e.g. weighted mean). \code{TRUE} by default.}

\item{key_column}{The index of the key (unique identifier) column in \code{rnet_x}.}

\item{split_y}{Should the second route network be split at the start and
end points of LINESTRING features in the first? \code{TRUE} by default.}
}
\description{
The output of this function is an sf object containing polygons representing
buffers around the route network in \code{rnet_x}.
The examples below demonstrate how to join attributes from
a route network object created with the function \code{\link[=overline]{overline()}} onto
OSM geometries.
}
\details{
Note: The main purpose of this function is to join an ID from \code{rnet_x}
onto \code{rnet_y}. Subsequent steps, e.g. with \code{\link[dplyr:mutate-joins]{dplyr::inner_join()}}
are needed to join the attributes back onto \code{rnet_x}.
There are rarely 1-to-1 relationships between spatial network geometries
so we take care when using this function.
}
\examples{
library(sf)
library(dplyr)
# Uncomment for interactive examples:
# library(mapview)
plot(route_network_small["flow"])
plot(osm_net_example$geometry, lwd = 5, col = "grey")
plot(route_network_small["flow"], add = TRUE)
rnetj = rnet_join(osm_net_example, route_network_small, dist = 9)
mapview(rnetj, zcol = "flow") +
  mapview(route_network_small, zcol = "flow")
plot(rnetj["flow"])
plot(route_network_small["flow"], add = TRUE)
rnetj_summary = rnetj \%>\%
  sf::st_drop_geometry() \%>\%
  group_by(osm_id) \%>\%
    summarise(
      flow = weighted.mean(flow, length_y, na.rm = TRUE),
      )
osm_joined_rnet = left_join(osm_net_example, rnetj_summary)
plot(osm_joined_rnet[c("flow", "highway")])
mapview(joined_network) +
  mapview(route_network_small)
}
