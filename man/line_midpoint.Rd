% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linefuns.R
\name{line_midpoint}
\alias{line_midpoint}
\title{Find the mid-point of lines}
\usage{
line_midpoint(l, tolerance = 0.01)
}
\arguments{
\item{l}{A spatial lines object}
}
\description{
This is a wrapper around \code{\link[=SpatialLinesMidPoints]{SpatialLinesMidPoints()}} that allows it to find the midpoint
of lines that are not projected, which have a lat/long CRS.
}
\examples{
data(routes_fast_sf)
line_midpoint(routes_fast[2:5, ])
}
\seealso{
Other lines: 
\code{\link{angle_diff}()},
\code{\link{geo_toptail}()},
\code{\link{is_linepoint}()},
\code{\link{line2df}()},
\code{\link{line2points}()},
\code{\link{line_bearing}()},
\code{\link{line_breakup}()},
\code{\link{line_sample}()},
\code{\link{line_segment}()},
\code{\link{line_via}()},
\code{\link{mats2line}()},
\code{\link{n_sample_length}()},
\code{\link{n_vertices}()},
\code{\link{onewaygeo}()},
\code{\link{points2line}()},
\code{\link{toptail_buff}()},
\code{\link{toptailgs}()},
\code{\link{update_line_geometry}()}
}
\concept{lines}
